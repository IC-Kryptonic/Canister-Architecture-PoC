type Video_Id = text;
type Chunk_Num = nat;

type IPFS_Data = record {};

type Storage_Type = variant {
    inCanister: Chunk_Num;
    simpleDistMap: Chunk_Num;
    IPFS: IPFS_Data;
};

type Video_Info = record {
    "video_id": Video_Id;
    "owner": principal;
    "name": text;
    "description": text;
    "keywords": vec text;
    "chunk_count": nat64;
};

type Profile = record {
        "principal": principal;
        "name": text;
        "likes": vec Video_Id;
};

type Video_Chunk = blob;
type Feed = vec Video_Info;

service : {
    "reset": () -> () oneway;

    "getVideoInfo": (Video_Id) -> (opt Video_Info) query;
    "createVideo": (Video_Info) -> (Video_Id);
    "putChunk": (Video_Chunk, nat64, Video_Id) -> () oneway;
    "getChunk": (nat64, Video_Id) -> (opt Video_Chunk) query;
    "getDefaultFeed": (nat64) -> (Feed) query;
    "searchVideo": (text) -> (opt Video_Info) query;

    "getProfile": (principal) -> (opt Profile) query;
    "getCurrentProfile": () -> (opt Profile) query;
    "createProfile": (Profile) -> () oneway;
    "likeVideo": (Video_Id) -> () oneway;
}
